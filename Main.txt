-- // Servi√ßos
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer
local backpack = player:WaitForChild("Backpack")

-- // IDs para equipar
local itemIDs = {
    17770317484,
    17772174303,
    17822722698,
    17771175724,
    17812415139,
    17812417356,
    17822749561,
    892267099,
    892265784,
    892268340,
    11274394350
}

-- // Fun√ß√£o principal
local function equipItems()
    -- 1Ô∏è‚É£ ResetCharacterAppearance
    local resetRemote = ReplicatedStorage:WaitForChild("Remotes"):FindFirstChild("ResetCharacterAppearance")
    if resetRemote then
        pcall(function()
            resetRemote:FireServer()
        end)
        print("üîÑ ResetCharacterAppearance executado!")
    else
        warn("‚ùå Remote ResetCharacterAppearance n√£o encontrado!")
    end

    task.wait(1) -- pequeno atraso entre os remotes

    -- 2Ô∏è‚É£ ApplyEmmiter
    local applyRemote = ReplicatedStorage:WaitForChild("Remotes"):FindFirstChild("ApplyEmmiter")
    if applyRemote then
        local args = { [1] = 18635837646, [2] = "0009FreeRed" }
        pcall(function()
            applyRemote:InvokeServer(unpack(args))
        end)
        print("‚ú® ApplyEmmiter executado!")
    else
        warn("‚ùå Remote ApplyEmmiter n√£o encontrado!")
    end

    task.wait(1) -- espera antes de come√ßar a equipar os itens

    -- 3Ô∏è‚É£ Equipar itens com delay de 2s entre cada
    local seen = {}
    local uniqueList = {}
    for _, id in ipairs(itemIDs) do
        if not seen[id] then
            seen[id] = true
            table.insert(uniqueList, id)
        end
    end

    for _, id in ipairs(uniqueList) do
        local success, err = pcall(function()
            ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("Wear"):InvokeServer(id)
        end)
        if success then
            print("‚úÖ Item ID "..id.." equipado com sucesso!")
        else
            warn("‚ö†Ô∏è Falha ao equipar Item ID "..id.." | "..tostring(err))
        end
        task.wait(2) -- <-- delay de 2 segundos entre cada item
    end

    -- 4Ô∏è‚É£ ChangeBodyColor
    local bodyColorRemote = ReplicatedStorage:WaitForChild("Remotes"):FindFirstChild("ChangeBodyColor")
    if bodyColorRemote then
        local args = { [1] = "Really black" }
        bodyColorRemote:FireServer(unpack(args))
        print("üé® ChangeBodyColor executado!")
    else
        warn("‚ùå Remote ChangeBodyColor n√£o encontrado!")
    end
end

-- // Cria a Tool
local tool = Instance.new("Tool")
tool.Name = "reaparecer"
tool.RequiresHandle = false
tool.CanBeDropped = false
tool.Parent = backpack

-- // Evento de clique
tool.Activated:Connect(function()
    equipItems()
end)

print("üõ†Ô∏è Tool criada no Backpack! Clique para executar os remotes e equipar os itens com seguran√ßa.")
